#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
int abs(int a){
    if(a<0) return -1*a;
    else return a;
}
int min(int a,int b){
    if(a>b) return b;
    else return a;
}
int dist(int *a,int *b){
    int res=0;
    res=(abs(a[0]-b[0])+abs(a[1]-b[1]));
    return res;
}
int minCostp(int points[][2], int pointsSize, int* pointsColSize){
    if(pointsSize == 2){
        return dist(points[0],points[1]);
    }
    int res = 0,currpt = 0;
    int mincost[pointsSize];
    mincost[0] = 0;
    bool visited[pointsSize];
    visited[0] = true;
    for(int i=1;i<pointsSize;i++){
        mincost[i] = 99999;
        visited[i] = false;
    }

    while(currpt >= 0){
        visited[currpt] = true;
        int minptcost = 99999,nxtpt = -1;
        for(int i=0;i<pointsSize;i++){
            if ((i==currpt)||(visited[i])){
                continue;
            }
            mincost[i] = min(dist(points[currpt],points[i]),mincost[i]);
            if(mincost[i] < minptcost){
                minptcost = mincost[i];
                nxtpt = i;
            }
        }
        res += (minptcost == 99999)?0:minptcost;
        currpt = nxtpt;
    }
    return res;
}
int main(){
    int i,n,j=2;
    printf("enter number of points:");
    scanf("%d",&n);
    int p[n][2];
    for(i=0;i<n;i++){
        printf("enter point-%d\n",i);
        scanf("%d %d",&p[i][0],&p[i][1]);
    }
    int m=minCostp(p,n,2);
    printf("min cost is:-%d",m);
    
}




